//In The Name Of God
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<string> vs;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef pair<double, double> dd;
typedef pair<dd, double> ddd;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<dd> vdd;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<vvi> vvvi;
typedef vector<vvvi> vvvvi;
typedef vector<ii> vii;
typedef vector<iii> viii;
typedef vector<vii> vvii;
typedef vector<vvii> vvvii;
typedef vector<vector<viii> > vvviii;
typedef vector<vector<iii> > vviii;
typedef set<int> si;
typedef vector<si> vsi;

#define F(i, n) for(int i = 0; i < n; i++)
#define F(i, j, n) for(int i = j; i < n; i++)

#define inf 1000000000
#define eps 1e-9
#define pi acos(-1.0) // alternative #define pi (2.0 * acos(0.0))
#define F first
#define S second
#define pb push_back

struct rng {
    int l, r, ind;
};

vi nums, sum;
vector<rng> ranges;
vector<ull> anses;

int s;
ull ans = 0;

bool cmp(rng a, rng b) {
    if(a.l / s != b.l / s) return a.l / s < b.l / s;
    return a.r < b.r;
}

void add(int i) {
    ull a = nums[i];
    ans -= a * (ull)sum[a] * (ull)sum[a];
    sum[a]++;
    ans += a * (ull)sum[a] * (ull)sum[a];
}

void remove(int i) {
    ull a = nums[i];
    ans -= a * (ull)sum[a] * (ull)sum[a];
    sum[a]--;
    ans += a * (ull)sum[a] * (ull)sum[a];
}

int main() {
    int n, t; scanf("%d%d", &n, &t);
    s = sqrt(n) + 1;
    sum.assign(1e6 + 10, 0);
    nums.assign(n + 1, 0);
    anses.assign(t, 0);
    for(int i = 1; i <= n; i++) scanf("%d", &nums[i]);
    for(int i = 0; i < t; i++) {
        rng r; scanf("%d%d", &r.l, &r.r);
        r.ind = i;
        ranges.push_back(r);
    }
    int cl = 0, cr = 0;
    sort(ranges.begin(), ranges.end(), cmp);
    for(auto &e: ranges) {
        if(cl == 0 && cr == 0) {
            cl = e.l, cr = e.r;
            for(int i = cl; i <= cr; i++) add(i);
        }
        while(cl < e.l){
            ull a = nums[cl];
            sum[a]--;
            ans -= a * (sum[a] * 2 + 1);
            cl++;
        }
        while(cl > e.l){
            cl--;
            ull a = nums[cl];
            sum[a]++;
            ans += a * (sum[a] * 2 - 1);
        }
        while(cr < e.r){
            cr++;
            ull a = nums[cr];
            sum[a]++;
            ans += a * (sum[a] * 2 - 1);
        }
        while(cr > e.r){
            ull a = nums[cr];
            sum[a]--;
            ans -= a * (sum[a] * 2 + 1);
            cr--;
        }
        anses[e.ind] = ans;
    }
    for(int i = 0; i < t; i++) printf("%lld\n", anses[i]);





    return 0;
}